<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.worksb.hi.project.mapper.ProjectMapper">
	<!-- 이진 -->
	<!-- 프로젝트 등록 -->
	<insert id="insertProject" parameterType="ProjectVO">
		<selectKey keyProperty="projectId" resultType="int" order="BEFORE">
			SELECT NVL(MAX(project_id), 0) + 1
			FROM project
		</selectKey>
		INSERT INTO project
						(
							project_id,
							project_name,
							project_access,
							manager_accp,
							write_access,
							update_access,
							board_access,
							comment_access,
							file_access,
							dept_id	
						)
						
				VALUES 	(
						#{projectId},
						#{projectName},
						#{projectAccess},
						#{managerAccp},
						#{writeAccess},
						#{updateAccess},
						#{boardAccess},
						#{commentAccess},
						#{fileAccess},
						#{deptId}
						)
	</insert>
	
	<select id="getProjectInfo" resultType="projectVO">
		SELECT project_id,
				project_name,
				project_access,
				manager_accp,
				write_access,
				update_access,
				board_access,
				comment_access,
				file_access,
				dept_id
		FROM project
		WHERE project_id = #{projectId}
	</select>

	<!-- 프로젝트 수정 -->
	<update id="updateProject" parameterType="projectVO">
		UPDATE project
		SET project_name = #{projectName},
			project_access = #{projectAccess},
			manager_accp = #{managerAccp},
			write_access = #{writeAccess},
			update_access = #{updateAccess},
			board_access = #{boardAccess},
			comment_access = #{commentAccess},
			file_access = #{fileAccess},
			dept_id = #{deptId}
		WHERE project_id = #{projectId}
	</update>
	
	<!-- 프로젝트 삭제 -->
	<delete id="deleteProject" parameterType="int">
		DELETE FROM project
		WHERE project_id = #{projectId}
	</delete>

	
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 주현 -->
<select id="searchPrj" parameterType="Integer" resultType="ProjectVO">
    SELECT p.project_id,
    	p.project_name,
    	find_subcode(project_access) project_access,
    	find_subcode(manager_accp) manager_accp,
    	find_subcode(write_access) write_access,
    	find_subcode(update_access) update_access,
    	find_subcode(board_access) board_access,
    	find_subcode(file_access) file_access,
    	find_subcode(comment_access) comment_access, 
    	(SELECT count(*)from prj_particir pp where p.project_id=pp.project_id) particir_num,
    	dept_id,
    	project_cls
    FROM project p INNER JOIN (SELECT DISTINCT project_id from prj_particir) pp ON p.project_id=pp.project_id 
    WHERE dept_id BETWEEN(SELECT MIN(dept_id) FROM department WHERE company_id=#{companyId})
    AND
    (SELECT MAX(dept_id) FROM department WHERE company_id=#{companyId})

</select>
</mapper>